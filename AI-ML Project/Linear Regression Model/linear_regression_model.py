# -*- coding: utf-8 -*-
"""linear regression model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hsgAPPtSFoCHgWH9GlfpTmzkg0ALy3vu
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
from sklearn.preprocessing import StandardScaler

# Load the dataset
df = pd.read_csv('50_Startups.csv')

# Explore the data
print("First few rows of the dataset:")
print(df.head())
print("\nDataset info:")
print(df.info())
print("\nMissing values:")
print(df.isnull().sum())

# Encode categorical variable and prepare features
X = pd.get_dummies(df.drop('Profit', axis=1), drop_first=True)
y = df['Profit']

# Identify continuous features for scaling
continuous_features = ['R&D Spend', 'Administration', 'Marketing Spend']

# Scale continuous features
scaler = StandardScaler()
X_continuous = X[continuous_features]
X_dummies = X.drop(continuous_features, axis=1)
X_continuous_scaled = scaler.fit_transform(X_continuous)
X_scaled = pd.concat([pd.DataFrame(X_continuous_scaled, columns=continuous_features), X_dummies], axis=1)

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# Train the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Calculate Mean Squared Error
mse = mean_squared_error(y_test, y_pred)
print("\nMean Squared Error:", mse)